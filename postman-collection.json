{
  "info": {
    "name": "Cycling CRM API",
    "description": "Complete API collection for the Cycling CRM system",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "store_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "staff_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "store_owner_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "customer_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "bike_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "service_request_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"role\": \"CUSTOMER\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.accessToken);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"oldpassword123\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "change-password"]
            }
          }
        },
        {
          "name": "Request Password Reset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/password-reset/request",
              "host": ["{{base_url}}"],
              "path": ["auth", "password-reset", "request"]
            }
          }
        },
        {
          "name": "Confirm Password Reset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset-token-here\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/password-reset/confirm",
              "host": ["{{base_url}}"],
              "path": ["auth", "password-reset", "confirm"]
            }
          }
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"verification-token-here\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/verify-email",
              "host": ["{{base_url}}"],
              "path": ["auth", "verify-email"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },   
 {
      "name": "Admin",
      "item": [
        {
          "name": "Get Store Owner Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/store-owners/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners", "stats"]
            }
          }
        },
        {
          "name": "Create Store Owner",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"storeowner@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Store\",\n  \"lastName\": \"Owner\",\n  \"businessName\": \"Cycling Store\",\n  \"businessAddress\": \"123 Main St, City, State\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/store-owners",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('store_owner_id', response.data.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Store Owners",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/store-owners?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Store Owner by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/store-owners/{{store_owner_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners", "{{store_owner_id}}"]
            }
          }
        },
        {
          "name": "Update Store Owner",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"Owner\",\n  \"businessName\": \"Updated Cycling Store\",\n  \"businessAddress\": \"456 New St, City, State\",\n  \"phone\": \"+1987654321\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/store-owners/{{store_owner_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners", "{{store_owner_id}}"]
            }
          }
        },
        {
          "name": "Deactivate Store Owner",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/store-owners/{{store_owner_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners", "{{store_owner_id}}"]
            }
          }
        },
        {
          "name": "Activate Store Owner",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/store-owners/{{store_owner_id}}/activate",
              "host": ["{{base_url}}"],
              "path": ["admin", "store-owners", "{{store_owner_id}}", "activate"]
            }
          }
        }
      ]
    },
    {
      "name": "Store Management",
      "item": [
        {
          "name": "Create Staff Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"staff@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Staff\",\n  \"lastName\": \"Member\",\n  \"permissions\": [\"MANAGE_INVENTORY\", \"PROCESS_SALES\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('staff_id', response.data.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Store Staff",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Staff Member by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff/{{staff_id}}",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff", "{{staff_id}}"]
            }
          }
        },
        {
          "name": "Update Staff Member",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"Staff\",\n  \"permissions\": [\"MANAGE_INVENTORY\", \"PROCESS_SALES\", \"VIEW_REPORTS\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff/{{staff_id}}",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff", "{{staff_id}}"]
            }
          }
        },
        {
          "name": "Update Staff Permissions",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"permissions\": [\"MANAGE_INVENTORY\", \"PROCESS_SALES\", \"VIEW_REPORTS\", \"MANAGE_CUSTOMERS\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff/{{staff_id}}/permissions",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff", "{{staff_id}}", "permissions"]
            }
          }
        },
        {
          "name": "Delete Staff Member",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff/{{staff_id}}",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff", "{{staff_id}}"]
            }
          }
        },
        {
          "name": "Reactivate Staff Member",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/staff/{{staff_id}}",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "staff", "{{staff_id}}"]
            }
          }
        },
        {
          "name": "Get Available Permissions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/permissions",
              "host": ["{{base_url}}"],
              "path": ["stores", "permissions"]
            }
          }
        }
      ]
    },
    {
      "name": "Customer - Bikes",
      "item": [
        {
          "name": "Register Bike",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"brand\": \"Trek\",\n  \"model\": \"Domane SL 7\",\n  \"year\": 2023,\n  \"serialNumber\": \"WTU123456789\",\n  \"color\": \"Matte Black\",\n  \"bikeType\": \"Road Bike\",\n  \"notes\": \"Carbon frame with Ultegra groupset\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/customers/bikes",
              "host": ["{{base_url}}"],
              "path": ["customers", "bikes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bike_id', response.data.bike.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Customer Bikes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/bikes?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["customers", "bikes"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Bike by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/bikes/{{bike_id}}",
              "host": ["{{base_url}}"],
              "path": ["customers", "bikes", "{{bike_id}}"]
            }
          }
        },
        {
          "name": "Update Bike",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"brand\": \"Trek\",\n  \"model\": \"Domane SL 7 Updated\",\n  \"year\": 2023,\n  \"color\": \"Gloss Black\",\n  \"notes\": \"Updated notes - carbon frame with Ultegra groupset\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/customers/bikes/{{bike_id}}",
              "host": ["{{base_url}}"],
              "path": ["customers", "bikes", "{{bike_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Customer - Service Requests",
      "item": [
        {
          "name": "Create Service Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bikeId\": \"{{bike_id}}\",\n  \"storeId\": \"{{store_id}}\",\n  \"requestedServices\": [\"Brake adjustment\", \"Chain lubrication\", \"Tire pressure check\"],\n  \"priority\": \"medium\",\n  \"preferredDate\": \"2024-12-25T10:00:00Z\",\n  \"customerNotes\": \"Brakes are squeaking when I apply them. Also need general maintenance.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/customers/service-requests",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('service_request_id', response.data.serviceRequest.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Service Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/service-requests?page=1&limit=10&sortBy=createdAt&sortOrder=DESC",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "DESC"
                }
              ]
            }
          }
        },
        {
          "name": "Get Service Requests - Filtered by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/service-requests?status=pending&priority=high",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "priority",
                  "value": "high"
                }
              ]
            }
          }
        },
        {
          "name": "Get Service Request by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/service-requests/{{service_request_id}}",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests", "{{service_request_id}}"]
            }
          }
        },
        {
          "name": "Update Service Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"requestedServices\": [\"Brake adjustment\", \"Chain lubrication\", \"Gear tuning\"],\n  \"priority\": \"high\",\n  \"customerNotes\": \"Updated notes - brakes are squeaking and gears are not shifting smoothly\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/customers/service-requests/{{service_request_id}}",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests", "{{service_request_id}}"]
            }
          }
        },
        {
          "name": "Cancel Service Request",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/service-requests/{{service_request_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests", "{{service_request_id}}", "cancel"]
            }
          }
        },
        {
          "name": "Get Service Request Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/customers/service-requests/stats",
              "host": ["{{base_url}}"],
              "path": ["customers", "service-requests", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "Store - Service Request Management",
      "item": [
        {
          "name": "Get Store Service Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests?page=1&limit=10&sortBy=createdAt&sortOrder=DESC",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "DESC"
                }
              ]
            }
          }
        },
        {
          "name": "Get Service Requests - Filtered",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests?status=pending&priority=urgent&customerId={{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "priority",
                  "value": "urgent"
                },
                {
                  "key": "customerId",
                  "value": "{{customer_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Service Request by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/{{service_request_id}}",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "{{service_request_id}}"]
            }
          }
        },
        {
          "name": "Update Service Request Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"quoted\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/{{service_request_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "{{service_request_id}}", "status"]
            }
          }
        },
        {
          "name": "Update Status - Approve Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/{{service_request_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "{{service_request_id}}", "status"]
            }
          }
        },
        {
          "name": "Update Status - Start Work",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"in_progress\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/{{service_request_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "{{service_request_id}}", "status"]
            }
          }
        },
        {
          "name": "Update Status - Complete Work",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/{{service_request_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "{{service_request_id}}", "status"]
            }
          }
        },
        {
          "name": "Cancel Service Request",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/{{service_request_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "{{service_request_id}}", "cancel"]
            }
          }
        },
        {
          "name": "Get Service Request Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/stats",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "stats"]
            }
          }
        },
        {
          "name": "Get Overdue Service Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/overdue",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "overdue"]
            }
          }
        },
        {
          "name": "Get High Priority Service Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stores/{{store_id}}/service-requests/high-priority",
              "host": ["{{base_url}}"],
              "path": ["stores", "{{store_id}}", "service-requests", "high-priority"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}